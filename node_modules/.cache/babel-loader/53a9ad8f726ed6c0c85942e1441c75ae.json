{"ast":null,"code":"import { baseUrl } from '../shared/baseUrl';\nimport * as ActionTypes from './ActionTypes';\nexport var postUser = function postUser(firstName, lastName, age, email) {\n  return function (dispatch) {\n    var newUser = {\n      name: firstName,\n      lastName: lastName,\n      age: age,\n      email: email\n    };\n    return fetch(baseUrl + 'users', {\n      method: 'POST',\n      body: JSON.stringify(newUser),\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      credentials: 'same-origin'\n    }).then(function (response) {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error(\"Error \" + response.status + \": \" + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    }, function (error) {\n      var errmess = new Error(error.message);\n      throw errmess;\n    }).then(function (response) {\n      return response.json();\n    }).then(function (user) {\n      return dispatch(addUser(user));\n    }).catch(function (error) {\n      console.log('Post User', error.message);\n      alert('Your user might not be posted');\n    });\n  };\n};\nexport var modifyUser = function modifyUser(id, firstName, lastName, age, email) {\n  return function (dispatch) {\n    var existingUser = {\n      id: id,\n      name: firstName,\n      lastName: lastName,\n      age: age,\n      email: email\n    };\n    return fetch(baseUrl + 'users/' + existingUser.id, {\n      method: 'PUT',\n      body: JSON.stringify(existingUser),\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      credentials: 'same-origin'\n    }).then(function (response) {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error(\"Error \" + response.status + \": \" + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    }, function (error) {\n      var errmess = new Error(error.message);\n      throw errmess;\n    }).then(function (response) {\n      return response.json();\n    }).then(dispatch(modUser(existingUser))).catch(function (error) {\n      console.log('Post User', error.message);\n      alert('Your user might not be modified');\n    });\n  };\n};\nexport var delUser = function delUser(id) {\n  return {\n    type: ActionTypes.DELETE_USER,\n    payload: id\n  };\n};\nexport var deleteUser = function deleteUser(id) {\n  return function (dispatch) {\n    return fetch(baseUrl + 'users/' + id, {\n      method: 'DELETE'\n    }).then(function (response) {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error(\"Error \" + response.status + \": \" + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    }, function (error) {\n      var errmess = new Error(error.message);\n      throw errmess;\n    }).then(dispatch(delUser(id))).catch(function (error) {\n      console.log('Post User', error.message);\n      alert('Your user might not be deleted');\n    });\n  };\n};\nexport var modUser = function modUser(user) {\n  return {\n    type: ActionTypes.MODIFY_USER,\n    payload: user\n  };\n};\nexport var addUsers = function addUsers(users) {\n  return {\n    type: ActionTypes.ADD_USERS,\n    payload: users\n  };\n};\nexport var usersFailed = function usersFailed(errmess) {\n  return {\n    type: ActionTypes.USERS_FAILED,\n    payload: errmess\n  };\n};\nexport var fetchUsers = function fetchUsers() {\n  return function (dispatch) {\n    dispatch(usersLoading(true));\n    return fetch(baseUrl + 'users').then(function (response) {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error(\"Error \" + response.status + \": \" + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    }, function (error) {\n      var errmess = new Error(error.message);\n      throw errmess;\n    }).then(function (response) {\n      return response.json();\n    }).then(function (users) {\n      return dispatch(addUsers(users));\n    }).catch(function (error) {\n      return dispatch(usersFailed(error.message));\n    });\n  };\n};\nexport var usersLoading = function usersLoading() {\n  return {\n    type: ActionTypes.USERS_LOADING\n  };\n};\nexport var addUser = function addUser(user) {\n  return {\n    type: ActionTypes.ADD_USER,\n    payload: user\n  };\n};","map":{"version":3,"sources":["D:\\Users\\avilchez\\aprendizaje\\PruebaReact\\Prueba_React_codigo\\front\\src\\redux\\ActionCreators.js"],"names":["baseUrl","ActionTypes","postUser","firstName","lastName","age","email","dispatch","newUser","name","fetch","method","body","JSON","stringify","headers","credentials","then","response","ok","error","Error","status","statusText","errmess","message","json","user","addUser","catch","console","log","alert","modifyUser","id","existingUser","modUser","delUser","type","DELETE_USER","payload","deleteUser","MODIFY_USER","addUsers","users","ADD_USERS","usersFailed","USERS_FAILED","fetchUsers","usersLoading","USERS_LOADING","ADD_USER"],"mappings":"AAAA,SAAQA,OAAR,QAAsB,mBAAtB;AACA,OAAO,KAAKC,WAAZ,MAA6B,eAA7B;AAEA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,SAAD,EAAYC,QAAZ,EAAsBC,GAAtB,EAA2BC,KAA3B;AAAA,SAAqC,UAACC,QAAD,EAAc;AAE1E,QAAMC,OAAO,GAAG;AACfC,MAAAA,IAAI,EAAEN,SADS;AAEfC,MAAAA,QAAQ,EAAEA,QAFK;AAGfC,MAAAA,GAAG,EAAEA,GAHU;AAIfC,MAAAA,KAAK,EAAEA;AAJQ,KAAhB;AAMA,WAAOI,KAAK,CAACV,OAAO,GAAG,OAAX,EAAoB;AAC/BW,MAAAA,MAAM,EAAC,MADwB;AAE/BC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,OAAf,CAFyB;AAG/BO,MAAAA,OAAO,EAAC;AACP,wBAAgB;AADT,OAHuB;AAM/BC,MAAAA,WAAW,EAAE;AANkB,KAApB,CAAL,CAQNC,IARM,CAQD,UAAAC,QAAQ,EAAI;AACjB,UAAGA,QAAQ,CAACC,EAAZ,EAAgB;AACf,eAAOD,QAAP;AACA,OAFD,MAEK;AACJ,YAAIE,KAAK,GAAG,IAAIC,KAAJ,CAAU,WAAWH,QAAQ,CAACI,MAApB,GAA4B,IAA5B,GAAmCJ,QAAQ,CAACK,UAAtD,CAAZ;AACAH,QAAAA,KAAK,CAACF,QAAN,GAAiBA,QAAjB;AACA,cAAME,KAAN;AACA;AACD,KAhBM,EAiBP,UAAAA,KAAK,EAAI;AACR,UAAII,OAAO,GAAG,IAAIH,KAAJ,CAAUD,KAAK,CAACK,OAAhB,CAAd;AACA,YAAMD,OAAN;AACA,KApBM,EAqBNP,IArBM,CAqBD,UAAAC,QAAQ;AAAA,aAAIA,QAAQ,CAACQ,IAAT,EAAJ;AAAA,KArBP,EAsBNT,IAtBM,CAsBA,UAAAU,IAAI;AAAA,aAAIpB,QAAQ,CAACqB,OAAO,CAACD,IAAD,CAAR,CAAZ;AAAA,KAtBJ,EAuBNE,KAvBM,CAuBA,UAAAT,KAAK,EAAI;AACfU,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAwBX,KAAK,CAACK,OAA9B;AACAO,MAAAA,KAAK,CAAC,+BAAD,CAAL;AACA,KA1BM,CAAP;AA4BA,GApCuB;AAAA,CAAjB;AAsCP,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,EAAD,EAAK/B,SAAL,EAAgBC,QAAhB,EAA0BC,GAA1B,EAA+BC,KAA/B;AAAA,SAAyC,UAACC,QAAD,EAAc;AAEhF,QAAM4B,YAAY,GAAG;AACpBD,MAAAA,EAAE,EAAEA,EADgB;AAEpBzB,MAAAA,IAAI,EAAEN,SAFc;AAGpBC,MAAAA,QAAQ,EAAEA,QAHU;AAIpBC,MAAAA,GAAG,EAAEA,GAJe;AAKpBC,MAAAA,KAAK,EAAEA;AALa,KAArB;AAQA,WAAOI,KAAK,CAACV,OAAO,GAAG,QAAV,GAAmBmC,YAAY,CAACD,EAAjC,EAAqC;AAChDvB,MAAAA,MAAM,EAAC,KADyC;AAEhDC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeqB,YAAf,CAF0C;AAGhDpB,MAAAA,OAAO,EAAC;AACP,wBAAgB;AADT,OAHwC;AAMhDC,MAAAA,WAAW,EAAE;AANmC,KAArC,CAAL,CAQNC,IARM,CAQD,UAAAC,QAAQ,EAAI;AACjB,UAAGA,QAAQ,CAACC,EAAZ,EAAgB;AACf,eAAOD,QAAP;AACA,OAFD,MAEK;AACJ,YAAIE,KAAK,GAAG,IAAIC,KAAJ,CAAU,WAAWH,QAAQ,CAACI,MAApB,GAA4B,IAA5B,GAAmCJ,QAAQ,CAACK,UAAtD,CAAZ;AACAH,QAAAA,KAAK,CAACF,QAAN,GAAiBA,QAAjB;AACA,cAAME,KAAN;AACA;AACD,KAhBM,EAiBP,UAAAA,KAAK,EAAI;AACR,UAAII,OAAO,GAAG,IAAIH,KAAJ,CAAUD,KAAK,CAACK,OAAhB,CAAd;AACA,YAAMD,OAAN;AACA,KApBM,EAqBNP,IArBM,CAqBD,UAAAC,QAAQ;AAAA,aAAIA,QAAQ,CAACQ,IAAT,EAAJ;AAAA,KArBP,EAsBNT,IAtBM,CAsBAV,QAAQ,CAAC6B,OAAO,CAACD,YAAD,CAAR,CAtBR,EAuBNN,KAvBM,CAuBA,UAAAT,KAAK,EAAI;AACfU,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAwBX,KAAK,CAACK,OAA9B;AACAO,MAAAA,KAAK,CAAC,iCAAD,CAAL;AACA,KA1BM,CAAP;AA4BA,GAtCyB;AAAA,CAAnB;AAwCP,OAAO,IAAMK,OAAO,GAAG,SAAVA,OAAU,CAACH,EAAD;AAAA,SAAQ;AAC9BI,IAAAA,IAAI,EAAErC,WAAW,CAACsC,WADY;AAE9BC,IAAAA,OAAO,EAAEN;AAFqB,GAAR;AAAA,CAAhB;AAKP,OAAO,IAAMO,UAAU,GAAG,SAAbA,UAAa,CAACP,EAAD;AAAA,SAAQ,UAAC3B,QAAD,EAAc;AAE/C,WAAOG,KAAK,CAACV,OAAO,GAAG,QAAV,GAAmBkC,EAApB,EAAwB;AAACvB,MAAAA,MAAM,EAAC;AAAR,KAAxB,CAAL,CACLM,IADK,CACA,UAAAC,QAAQ,EAAI;AACjB,UAAGA,QAAQ,CAACC,EAAZ,EAAgB;AAChB,eAAOD,QAAP;AACC,OAFD,MAEK;AACJ,YAAIE,KAAK,GAAG,IAAIC,KAAJ,CAAU,WAAWH,QAAQ,CAACI,MAApB,GAA4B,IAA5B,GAAmCJ,QAAQ,CAACK,UAAtD,CAAZ;AACAH,QAAAA,KAAK,CAACF,QAAN,GAAiBA,QAAjB;AACA,cAAME,KAAN;AACA;AACD,KATK,EASH,UAAAA,KAAK,EAAI;AACX,UAAII,OAAO,GAAG,IAAIH,KAAJ,CAAUD,KAAK,CAACK,OAAhB,CAAd;AACA,YAAMD,OAAN;AACA,KAZK,EAaLP,IAbK,CAaAV,QAAQ,CAAC8B,OAAO,CAACH,EAAD,CAAR,CAbR,EAcLL,KAdK,CAcC,UAAAT,KAAK,EAAI;AACfU,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAwBX,KAAK,CAACK,OAA9B;AACAO,MAAAA,KAAK,CAAC,gCAAD,CAAL;AACD,KAjBM,CAAP;AAmBA,GArByB;AAAA,CAAnB;AAyBP,OAAO,IAAMI,OAAO,GAAG,SAAVA,OAAU,CAACT,IAAD;AAAA,SAAW;AACjCW,IAAAA,IAAI,EAAErC,WAAW,CAACyC,WADe;AAEjCF,IAAAA,OAAO,EAAEb;AAFwB,GAAX;AAAA,CAAhB;AAMP,OAAO,IAAMgB,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD;AAAA,SAAY;AACnCN,IAAAA,IAAI,EAAErC,WAAW,CAAC4C,SADiB;AAEnCL,IAAAA,OAAO,EAAEI;AAF0B,GAAZ;AAAA,CAAjB;AAIP,OAAO,IAAME,WAAW,GAAG,SAAdA,WAAc,CAACtB,OAAD;AAAA,SAAc;AACxCc,IAAAA,IAAI,EAAErC,WAAW,CAAC8C,YADsB;AAExCP,IAAAA,OAAO,EAAEhB;AAF+B,GAAd;AAAA,CAApB;AAKP,OAAO,IAAMwB,UAAU,GAAG,SAAbA,UAAa;AAAA,SAAM,UAACzC,QAAD,EAAa;AAC5CA,IAAAA,QAAQ,CAAC0C,YAAY,CAAC,IAAD,CAAb,CAAR;AAEA,WAAOvC,KAAK,CAACV,OAAO,GAAG,OAAX,CAAL,CACNiB,IADM,CACD,UAAAC,QAAQ,EAAI;AACjB,UAAGA,QAAQ,CAACC,EAAZ,EAAgB;AACf,eAAOD,QAAP;AACA,OAFD,MAEK;AACJ,YAAIE,KAAK,GAAG,IAAIC,KAAJ,CAAU,WAAWH,QAAQ,CAACI,MAApB,GAA4B,IAA5B,GAAmCJ,QAAQ,CAACK,UAAtD,CAAZ;AACAH,QAAAA,KAAK,CAACF,QAAN,GAAiBA,QAAjB;AACA,cAAME,KAAN;AACA;AACD,KATM,EAUP,UAAAA,KAAK,EAAI;AACR,UAAII,OAAO,GAAG,IAAIH,KAAJ,CAAUD,KAAK,CAACK,OAAhB,CAAd;AACA,YAAMD,OAAN;AACA,KAbM,EAcNP,IAdM,CAcD,UAAAC,QAAQ;AAAA,aAAIA,QAAQ,CAACQ,IAAT,EAAJ;AAAA,KAdP,EAeNT,IAfM,CAeD,UAAA2B,KAAK;AAAA,aAAIrC,QAAQ,CAACoC,QAAQ,CAACC,KAAD,CAAT,CAAZ;AAAA,KAfJ,EAgBNf,KAhBM,CAgBA,UAAAT,KAAK;AAAA,aAAIb,QAAQ,CAACuC,WAAW,CAAC1B,KAAK,CAACK,OAAP,CAAZ,CAAZ;AAAA,KAhBL,CAAP;AAkBA,GArByB;AAAA,CAAnB;AAsBP,OAAO,IAAMwB,YAAY,GAAG,SAAfA,YAAe;AAAA,SAAO;AAClCX,IAAAA,IAAI,EAAErC,WAAW,CAACiD;AADgB,GAAP;AAAA,CAArB;AAGP,OAAO,IAAMtB,OAAO,GAAG,SAAVA,OAAU,CAACD,IAAD;AAAA,SAAW;AACjCW,IAAAA,IAAI,EAACrC,WAAW,CAACkD,QADgB;AAEjCX,IAAAA,OAAO,EAACb;AAFyB,GAAX;AAAA,CAAhB","sourcesContent":["import {baseUrl} from '../shared/baseUrl';\r\nimport * as ActionTypes from './ActionTypes';\r\n\r\nexport const postUser = (firstName, lastName, age, email) => (dispatch) => {\r\n\t\r\n\tconst newUser = {\r\n\t\tname: firstName,\r\n\t\tlastName: lastName,\r\n\t\tage: age,\r\n\t\temail: email\r\n\t}\r\n\treturn fetch(baseUrl + 'users', {\r\n\t\tmethod:'POST',\r\n\t\tbody: JSON.stringify(newUser),\r\n\t\theaders:{\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t},\r\n\t\tcredentials: 'same-origin'\r\n\t})\r\n\t.then(response => {\r\n\t\tif(response.ok) {\r\n\t\t\treturn response;\r\n\t\t}else{\r\n\t\t\tvar error = new Error(\"Error \" + response.status+ \": \" + response.statusText);\r\n\t\t\terror.response = response;\r\n\t\t\tthrow error;\r\n\t\t}\r\n\t},\r\n\terror => {\r\n\t\tvar errmess = new Error(error.message);\r\n\t\tthrow errmess\r\n\t})\r\n\t.then(response => response.json())\r\n\t.then( user => dispatch(addUser(user)))\r\n\t.catch(error => {\r\n\t\tconsole.log('Post User',error.message);\r\n\t\talert('Your user might not be posted');\r\n\t});\r\n\t\r\n};\r\n\r\nexport const modifyUser = (id, firstName, lastName, age, email) => (dispatch) => {\r\n\t\r\n\tconst existingUser = {\r\n\t\tid: id,\r\n\t\tname: firstName,\r\n\t\tlastName: lastName,\r\n\t\tage: age,\r\n\t\temail: email\r\n\t}\r\n\t\r\n\treturn fetch(baseUrl + 'users/'+existingUser.id, {\r\n\t\tmethod:'PUT',\r\n\t\tbody: JSON.stringify(existingUser),\r\n\t\theaders:{\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t},\r\n\t\tcredentials: 'same-origin'\r\n\t})\r\n\t.then(response => {\r\n\t\tif(response.ok) {\r\n\t\t\treturn response;\r\n\t\t}else{\r\n\t\t\tvar error = new Error(\"Error \" + response.status+ \": \" + response.statusText);\r\n\t\t\terror.response = response;\r\n\t\t\tthrow error;\r\n\t\t}\r\n\t},\r\n\terror => {\r\n\t\tvar errmess = new Error(error.message);\r\n\t\tthrow errmess\r\n\t})\r\n\t.then(response => response.json())\r\n\t.then( dispatch(modUser(existingUser)))\r\n\t.catch(error => {\r\n\t\tconsole.log('Post User',error.message);\r\n\t\talert('Your user might not be modified');\r\n\t});\r\n\t\r\n};\r\n\r\nexport const delUser = (id) =>({\r\n\ttype: ActionTypes.DELETE_USER,\r\n\tpayload: id\r\n})\r\n\r\nexport const deleteUser = (id) => (dispatch) => {\r\n\t\r\n\treturn fetch(baseUrl + 'users/'+id, {method:'DELETE'})\r\n\t\t.then(response => {\r\n\t\t\tif(response.ok) {\r\n\t\t\treturn response;\r\n\t\t\t}else{\r\n\t\t\t\tvar error = new Error(\"Error \" + response.status+ \": \" + response.statusText);\r\n\t\t\t\terror.response = response;\r\n\t\t\t\tthrow error;\r\n\t\t\t}\r\n\t\t}, error => {\r\n\t\t\tvar errmess = new Error(error.message);\r\n\t\t\tthrow errmess\r\n\t\t})\r\n\t\t.then(dispatch(delUser(id)))\r\n\t\t.catch(error => {\r\n\t\t\tconsole.log('Post User',error.message);\r\n\t\t\talert('Your user might not be deleted');\r\n\t});\r\n\t\t\r\n};\r\n\r\n\r\n\r\nexport const modUser = (user) => ({\r\n\ttype: ActionTypes.MODIFY_USER,\r\n\tpayload: user\r\n});\r\n\r\n\r\nexport const addUsers = (users) => ({\r\n\ttype: ActionTypes.ADD_USERS,\r\n\tpayload: users\r\n});\r\nexport const usersFailed = (errmess) => ({\r\n\ttype: ActionTypes.USERS_FAILED,\r\n\tpayload: errmess\r\n});\r\n\r\nexport const fetchUsers = () => (dispatch) =>{\r\n\tdispatch(usersLoading(true));\r\n\t\r\n\treturn fetch(baseUrl + 'users')\r\n\t.then(response => {\r\n\t\tif(response.ok) {\r\n\t\t\treturn response;\r\n\t\t}else{\r\n\t\t\tvar error = new Error(\"Error \" + response.status+ \": \" + response.statusText);\r\n\t\t\terror.response = response;\r\n\t\t\tthrow error;\r\n\t\t}\r\n\t},\r\n\terror => {\r\n\t\tvar errmess = new Error(error.message);\r\n\t\tthrow errmess\r\n\t})\r\n\t.then(response => response.json())\r\n\t.then(users => dispatch(addUsers(users)))\r\n\t.catch(error => dispatch(usersFailed(error.message)));\r\n\t\r\n};\r\nexport const usersLoading = () => ({\r\n\ttype: ActionTypes.USERS_LOADING\r\n});\r\nexport const addUser = (user) => ({\r\n\ttype:ActionTypes.ADD_USER,\r\n\tpayload:user\r\n})\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}